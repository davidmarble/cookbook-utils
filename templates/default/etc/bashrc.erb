# /etc/bash.bashrc (debian, ubuntu) and /etc/bashrc (redhat, centos)

if [ -d /etc/profile.d ]; then
	for i in /etc/profile.d/*.sh ; do
		if [ -r "$i" ]; then
			if [ "$PS1" ]; then
				. $i
			else
				. $i >/dev/null 2>&1
			fi
		fi
	done
	unset i
fi

##########################
# Interactive login extras
##########################
if [ -n "$PS1" ]; then

	# don't put duplicate lines in the history. See bash(1) for more options
	# ... or force ignoredups and ignorespace
	HISTCONTROL=ignoredups:ignorespace

	# append to the history file, don't overwrite it
	shopt -s histappend

	# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
	export HISTSIZE=32768
	export HISTFILESIZE=$HISTSIZE
	export HISTCONTROL=ignoredups
	export REPORTTIME=10 # print elapsed time when more than 10 seconds
	export HOSTNAME=`/bin/hostname`

	# check the window size after each command and, if necessary,
	# update the values of LINES and COLUMNS.
	shopt -s checkwinsize

	# make less more friendly for non-text input files, see lesspipe(1)
	[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

	# LS COLORS
	export CLICOLOR=1
	export LSCOLORS=ExFxCxDxBxegedabagacad

	GRAY="\[\033[1;30m\]"
	BLACK="\[\033[0;30m\]"
	RED="\[\033[0;31m\]"
	LRED="\[\033[1;31m\]"
	GREEN="\[\033[0;32m\]"
	LGREEN="\[\033[1;32m\]"
	YELLOW="\[\033[0;33m\]"
	LYELLOW="\[\033[1;33m\]"
	BLUE="\[\033[0;34m\]"
	LBLUE="\[\033[1;34m\]"
	MAGENTA="\[\033[0;35m\]"
	LMAGENTA="\[\033[1;35m\]"
	CYAN="\[\033[0;36m\]"
	LCYAN="\[\033[1;36m\]"
	WHITE="\[\033[0;37m\]"
	WHITEBOLD="\[\033[1;37m\]"
	NIL="\[\033[00m\]"

	function set_prompt() {
		_venv=`basename "$VIRTUAL_ENV"`
		if [ "`id -u`" -eq 0 ]; then
			end="\n${WHITEBOLD}\#${NIL} "
		else
			end="\n${WHITEBOLD}\$${NIL} "
		fi
		
		if [[ -n $_venv ]]; then
			end="\n${LYELLOW}(${_venv})${NIL} "
		fi
		
		user_host="${GREEN}\u@\H${NIL}"
		
		_dirname=$(pwd | sed "s#$HOME#~#")
		path="${YELLOW}${_dirname}${NIL}"

		# git branch / dirtiness
		# dirtiness cribbed from:
		# http://henrik.nyh.se/2008/12/git-dirty-prompt#comment-8325834
		if git update-index -q --refresh 2>/dev/null; git diff-index --quiet --cached HEAD --ignore-submodules -- 2>/dev/null && git diff-files --quiet --ignore-submodules 2>/dev/null
			then dirty=""
		else
			dirty="${RED}*${NIL}"
		fi
		_branch=$(git symbolic-ref HEAD 2>/dev/null)
		_branch=${_branch#refs/heads/} # apparently faster than sed
		branch="" # need this to clear it when we leave a repo
		if [[ -n $_branch ]]; then
			branch=" ${NIL}${YELLOW}[${_branch}]${dirty}${NIL}"
		fi
		
		export PS1="\n${user_host} ${path}${branch} ${end}"
	}
	export PROMPT_COMMAND=set_prompt

	# Case-insensitive globbing (used in pathname expansion)
	shopt -s nocaseglob

	# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
	complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2)" scp sftp ssh

	# enable programmable completion features (you don't need to enable
	# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
	# sources /etc/bash.bashrc).
	if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
		. /etc/bash_completion
	fi

fi
##############################
# End interactive login extras
##############################

# ALIASES
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

if groups | grep -q www-pub; then

	# CONVENIENCE. Allows things like cp file.txt $www/logs
<% if node.has_key?('webapp') and node['webapp'].has_key?('app_name') -%>
	export www=<%= node.webapp.deploy_root %>
	export <%= node.webapp.app_name -%>=<%= node.webapp.deploy_root -%>/<%= node.webapp.app_name %>
	export <%= node.webapp.app_name -%>live=<%= node.webapp.deploy_root -%>/<%= node.webapp.app_name -%>/live
<% end -%>

	# PATHS (for OS X if using homebrew)
	#export NODE_PATH=/usr/local/lib/node_modules
	#export PYTHONPATH=/usr/local/lib/python:$PYTHONPATH
	#export PATH=/usr/local/bin:/usr/local/sbin:$PATH
	#export PATH=/usr/local/share/python:$HOME/.rbenv/bin:$PATH

<% if node.has_key?('python') -%>
	# VIRTUALENV, PIP
<% if node['python'].has_key?('WORKON_HOME') -%>
	export WORKON_HOME=<%= node.python.WORKON_HOME %>
	export VIRTUALENVWRAPPER_LOG_DIR=$WORKON_HOME
	export VIRTUALENVWRAPPER_HOOK_DIR=$WORKON_HOME
	export VIRTUALENVWRAPPER_PYTHON=`which python`
	export VIRTUAL_ENV_DISABLE_PROMPT=1
<% end -%>
	export PIP_USE_MIRRORS=true
	export PIP_VIRTUALENV_BASE=$WORKON_HOME
	export PIP_RESPECT_VIRTUALENV=true
<% if node['python'].has_key?('pip_download_cache') -%>
	export PIP_DOWNLOAD_CACHE=<%= node['python']['pip_download_cache'] %>
<% else -%>
	export PIP_DOWNLOAD_CACHE=/tmp
<% end -%>
<% end -%>

	# if using virtualenvwrapper
	if [ -s /usr/local/bin/virtualenvwrapper.sh ]; then 
		source /usr/local/bin/virtualenvwrapper.sh; 
	elif [ -s /usr/bin/virtualenvwrapper.sh ]; then 
		source /usr/bin/virtualenvwrapper.sh; 
	fi
	
	umask 0002
fi

# if using rbenv
if [ -s $HOME/.rbenv/bin/rbenv ]; then
	eval "$(rbenv init -)"
fi

# if using rvm
if [ -s /usr/local/rvm/scripts/rvm ]; then 
    source /usr/local/rvm/scripts/rvm; 
fi

if [ -s $HOME/byobu/bin/byobu ]; then
    export PATH=$HOME/byobu/bin:$PATH
fi